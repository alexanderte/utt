// Generated by CoffeeScript 1.3.3
(function() {
  var getLanguage, io, languages, request, requestUrl, transformResult, transformResults, _;

  io = require('socket.io').listen(8000);

  request = require('request');

  _ = require('underscore');

  languages = require('languages');

  requestUrl = function(webPageUrl) {
    return 'http://accessibility.egovmon.no/en/pagecheck2.0/?url=' + encodeURIComponent(webPageUrl) + '&export=json';
  };

  transformResults = function(results) {
    return _.reject(_.map(_.where(results, {
      category: 'verify'
    }), function(result) {
      return transformResult(result);
    }), function(result) {
      return _.isEmpty(result);
    });
  };

  getLanguage = function(languageCode) {
    if (languageCode === 'en-US') {
      return 'English';
    } else if (languages.isValid(languageCode)) {
      return languages.getLanguageInfo(languageCode).name;
    } else {
      return '<em>Unknown language code</em>';
    }
  };

  transformResult = function(result) {
    var languageCode;
    switch (result.id) {
      case 'SC2.4.2-1-11':
        return {
          resultId: result.id,
          description: 'Title describes content of page',
          question: 'Does the title “' + result.details.page_title + '” describe the content of this web page?',
          answers: ['Yes', 'No']
        };
      case 'SC2.4.4-2-11':
        return {
          resultId: result.id,
          description: 'Link text describes link purpose',
          question: 'Does the link text ' + result.details.code_extract + ' describe the link purpose?',
          answers: ['Yes', 'No', 'Unsure']
        };
      case 'SC2.4.4-2-12':
        return {
          resultId: result.id,
          description: 'Title of link describes link purpose',
          question: 'Does the title “' + result.details.title + '” for the link ' + result.details.code_extract + ' describe the link purpose?',
          answers: ['Yes', 'No', 'Unsure']
        };
      case 'SC2.4.6-1-11':
        return {
          resultId: result.id,
          description: 'Heading describes section it belongs to',
          question: 'Does the heading “' + result.details.heading + '” describe the section it belongs to?',
          answers: ['Yes', 'No', 'Unsure']
        };
      case 'SC3.1.2-2-11':
        languageCode = result.details.language_definition.language_code;
        return {
          resultId: result.id,
          description: 'Text correlates with specified language',
          question: 'Does the text “' + result.details.checked_text + '” correlate with the specified language ' + getLanguage(languageCode) + ' (' + languageCode + ')?',
          answers: ['Yes', 'No', 'Unsure', 'I don’t speak ' + getLanguage(languageCode)]
        };
      default:
        console.log('Not supported: ' + result);
        return {};
    }
  };

  io.sockets.on('connection', function(socket) {
    return socket.on('get tests', function(data) {
      return request(requestUrl(data), function(error, result, body) {
        return socket.emit('tests', transformResults(JSON.parse(body)));
      });
    });
  });

}).call(this);
